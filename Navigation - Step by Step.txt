1º) Create Outbound plug at the View Source
2º) Create Outbound plug at the Window Source
3º) Create Inbound plug  at the Window Target
4º) If the components are different, you must create the Component Usage and the Component Interface and then create the NAVIGATION LINK.
5º) At the event of the clickable model/value attribute, call the Outboundplug, example:

  cl_thtmlb_util=>get_event_info(
    EXPORTING
      iv_event  = htmlb_event_ex
    IMPORTING
      ev_index  = DATA(lv_index) ).

  DATA(lr_entity) = me->typed_context->result->get_bo_by_index(
                      iv_index        =  lv_index
                      iv_change_focus = abap_false ).

  CHECK lr_entity IS BOUND.

  DATA(lr_col) = NEW cl_crm_bol_bo_col( ).

  lr_col->if_bol_bo_col~add(
    EXPORTING
      iv_entity    = lr_entity  ).

  op_nav_to_change_case(
      iv_data_collection = lr_col
  ).


6º) At the View Outbound plug, add the code below and call the Window Outbound plug:

  DATA(lr_window) = me->view_manager->get_window_controller( ).
  lr_window->call_outbound_plug(
    EXPORTING
      iv_outbound_plug   = 'NAV_TO_CHANGE_CASE' " OutboundPlug of the WINDOW
      iv_data_collection = IV_DATA_COLLECTION ).


7º) Add the Outbound Plug at the Window in the Runtime Repository, as well as the Inbound Plug in the other Window.

8º) At the Component Interface create the InterfaceView with the Plugs.

9º) Create a Component Usage and add it to the Window Source in the Runtime Repository.

10º) Create a Navigation Link from the Window Source to the destination Component Usage.

11º) At the Outbound Plug from the Window Source, add the navigation code:

  DATA(lr_window) = me->view_manager->get_window_controller( ).

  lr_window->navigate(
    EXPORTING
      source_rep_view = rep_view
      outbound_plug   = 'FROM_ACC_TO_CC' "NavigationalLink FROM_ACC_TO_CC
      data_collection = IV_DATA_COLLECTION ).
